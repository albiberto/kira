@page "/workloads"
@using Kira.Builders
@using Kira.Domain
@using Kira.Extensions
@using Kira.Infrastructure.Options
@using Microsoft.Extensions.Options
@inject IOptions<JiraOptions> Options;

<Filter Query=Query QueryChanged=QueryChanged></Filter>
<RadzenStack class="rz-mt-4">
    <RadzenDataGrid @ref="grid"
                    TItem="Issue"
                    Data="@issues" LoadData="LoadData" Count="count" IsLoading="isLoading"
                    AllowGrouping="false"
                    AllowFiltering="false"
                    AllowColumnResize="true"
                    AllowPaging="false"
                    AllowSorting="true"
                    GroupRowRender="OnGroupRowRender"
                    Render="@OnRender">
        <HeaderTemplate>
            <RadzenRow Style="width: 100%">
                <RadzenColumn Size="12" SizeMD="12">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        <RadzenBadge BadgeStyle="BadgeStyle.Dark" Shade="Shade.Darker" Variant="Variant.Text" Text="@(Query.Empty ? "Click the Search Button to Display Data" : Query.ToJql())"/>
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow Style="width: 100%" Gap="4px;">
                <RadzenColumn Size="12" SizeMD="12">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        <RadzenCheckBox @bind-Value=@groupsExpanded Name="EnableCheckBox" TValue="bool" TriState="false"/>
                        <RadzenLabel Text="All groups expanded" Component="EnableCheckBox"/>
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>
        </HeaderTemplate>
        <GroupHeaderTemplate>
            @context.GroupDescriptor.GetTitle(): @(context.Data.Key ?? "Unassigned")
        </GroupHeaderTemplate>
        <Columns>
            <RadzenDataGridColumn TItem="Issue" Property="Type" Title="T" Width="120px;">
                <Template Context="issue">
                    @if (issue.Fields.Parent?.Fields?.Type?.IconUrl is not null)
                    {
                        <RadzenImage Path="@issue.Fields.Parent?.Fields?.Type?.IconUrl" class="icon" MouseEnter="@(args => ShowTooltip(args, "Parent"))"/>
                    }
                    <RadzenImage Path="@issue.Fields.Type.IconUrl" class="icon"/>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Issue" Property="Priority" Title="P" Width="120px;">
                <Template Context="issue">
                    @if (!string.IsNullOrEmpty(issue.Fields.Parent?.Fields?.Priority?.IconUrl))
                    {
                        <RadzenImage Path="@issue.Fields.Parent?.Fields?.Priority?.IconUrl" class="icon" MouseEnter="@(args => ShowTooltip(args, "Parent"))"/>
                    }
                    <RadzenImage Path="@issue.Fields.Priority.IconUrl" class="icon"/>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Issue" Property="Key" Title="Key" Width="220px">
                <Template Context="issue">
                    @if (issue.Fields.Parent.Key is not null)
                    {
                        <RadzenLink Path=@($"{Options.Value.UIAddress}{issue.Fields.Parent.Key}") Text="@($"{issue.Fields.Parent.Key} / ")" MouseEnter="@(args => ShowTooltip(args, "Parent"))"/>
                    }
                    <RadzenLink Path=@($"{Options.Value.UIAddress}{issue.Key}") Text="@issue.Key"/>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Issue" Property="Fields.Summary" Title="Summary" Sortable="false" Width="100px">
                <Template Context="issue">
                    @issue.Fields.Summary
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Issue" Property="Status" Title="Status" Width="140px;">
                <Template Context="issue">
                    <RadzenBadge IsPill="true" Variant="Variant.Outlined" BadgeStyle=@(issue.Fields.Status.StatusCategory.Id.ToBadgeStyle()) Text="@issue.Fields.Status.Name"/>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Issue" Property="Start Date" Title="StartDate" Width="140px">
                <Template Context="issue">
                    <RadzenBadge IsPill="true" Variant="Variant.Text" BadgeStyle=@BadgeStyle.Dark Text="@(issue.Fields.StartDate ?? string.Empty)"/>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Issue" Property="DueDate" Title="DueDate" Width="140px">
                <Template Context="issue">
                    <RadzenBadge IsPill="true" Variant="Variant.Text" BadgeStyle=@BadgeStyle.Dark Text="@(issue.Fields.DueDate ?? string.Empty)"/>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Issue" Property="TimeOriginalEstimate" Title="Original" Width="140px;">
                <Template Context="issue">
                    <RadzenBadge IsPill="true" Variant="Variant.Text" BadgeStyle=BadgeStyle.Dark Text="@issue.Fields.TimeOriginalEstimate.ToWorkingDaysHoursMinutes()"/>
                </Template>
                <FooterTemplate>
                    <b>@(issues?.Sum(o => o.Fields.TimeOriginalEstimate).ToWorkingDaysHoursMinutes())</b>
                </FooterTemplate>
                <GroupFooterTemplate>
                    <b>@(context.Data.Items.Cast<Issue>().Sum(o => o.Fields.TimeOriginalEstimate).ToWorkingDaysHoursMinutes())</b>
                </GroupFooterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Issue" Property="TimeSpent" Title="Spent" Width="140px;">
                <Template Context="issue">
                    <RadzenBadge IsPill="true" Variant="Variant.Text" BadgeStyle=BadgeStyle.Dark Text="@issue.Fields.TimeSpent.ToWorkingDaysHoursMinutes()"/>
                </Template>
                <FooterTemplate>
                    <b>@(issues?.Sum(o => o.Fields.TimeSpent).ToWorkingDaysHoursMinutes())</b>
                </FooterTemplate>
                <GroupFooterTemplate>
                    <b>@(context.Data.Items.Cast<Issue>().Sum(o => o.Fields.TimeSpent).ToWorkingDaysHoursMinutes())</b>
                </GroupFooterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Issue" Property="RemainingEstimate" Title="Remaining" Width="140px;">
                <Template Context="issue">
                    <RadzenBadge IsPill="true" Variant="Variant.Text" BadgeStyle=BadgeStyle.Dark Text="@issue.Fields.RemainingEstimate.ToWorkingDaysHoursMinutes()"/>
                </Template>
                <FooterTemplate>
                    <b>@(issues?.Sum(o => o.Fields.RemainingEstimate).ToWorkingDaysHoursMinutes())</b>
                </FooterTemplate>
                <GroupFooterTemplate>
                    <b>@(context.Data.Items.Cast<Issue>().Sum(o => o.Fields.RemainingEstimate).ToWorkingDaysHoursMinutes())</b>
                </GroupFooterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Issue" Property="Progress" Title="Progress" Width="140px;">
                <Template Context="issue">
                    <RadzenProgressBar ProgressBarStyle="ProgressBarStyle.Primary" Min="0" Max="100" Value="@issue.Fields.Progress.Percent.ToDouble()" ShowValue="false"/>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</RadzenStack>