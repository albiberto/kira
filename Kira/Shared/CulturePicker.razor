@using System.Globalization
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<CulturePicker> L
@inject NavigationManager NavigationManager

<RadzenDropDown
    @bind-Value="@culture"
    TValue="string"
    Data="@(new[] { new { Text = "English", Value="en" }, new { Text="Italiano (Italia)", Value="it - IT" } })"
    TextProperty="Text"
    ValueProperty="Value"
    Change="@ChangeCulture"/>

@code
{
    private string culture;

    protected override void OnInitialized() => culture = CultureInfo.CurrentCulture.Name;

    protected void ChangeCulture()
    {
        var redirect = new Uri(NavigationManager.Uri).GetComponents(UriComponents.PathAndQuery | UriComponents.Fragment, UriFormat.UriEscaped);

        var query = $"?culture={Uri.EscapeDataString(culture)}&redirectUri={redirect}";

        NavigationManager.NavigateTo("Culture/SetCulture" + query, true);
    }
}